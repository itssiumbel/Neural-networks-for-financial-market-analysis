kernel = int(window/2)
model = ks.models.Sequential()
model.add(ks.layers.Conv1D(filters=64, activation='relu', input_shape=(window,3)))
model.add(ks.layers.MaxPooling1D(pool_size=2,
model.add(ks.layers.Conv1D(filters=128, activation='relu'))
model.add(ks.layers.MaxPooling1D(pool_size=1, model.add(ks.layers.Dropout(0.1)) 
model.add(ks.layers.Flatten()) 
model.add(ks.layers.Dense(128, activation='relu')) 
model.add(ks.layers.Dropout(0.1))
model.add(ks.layers.Dense(64, activation='relu')) 
model.add(ks.layers.Dropout(0.1)) 
model.add(ks.layers.Dense(1, activation='relu')) 
model.compile(optimizer='adam', loss='mse')
fit = model.fit(trainX, trainY, epochs=10, batch_size=64, verbose=1) 
